"Land Locked Developing Countries",
"Least Developed Countries",
"Low Income Food Deficit Countries",
"Micronesia (region)",
"Middle Africa",
"Net Food Importing Developing Countries",
"Northern Africa",
"Northern Europe",
"Serbia and Montenegro",
"Small island developing States",
"South Eastern Asia",
"Southern Africa",
"Southern Asia",
"Southern Europe",
"Western Africa",
"World")) %>%
mutate(
entity = case_when(
entity == "Sudan (former)" ~ "Sudan",
entity == "Northern America" ~ "North America",
TRUE ~ entity)) %>%
select(-code, -year) %>%
group_by(entity) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(Total = rowSums(across(where(is.numeric)))) %>%
top_n(25)
soybean_clean <- soybean_use %>%
filter(between(year, 2000, 2013)) %>%
filter(!entity %in% c("Americas",
"Asia, Central",
"Australia & New Zealand",
"Central America",
"Eastern Africa",
"Eastern Europe",
"Europe, Western",
"European Union",
"Land Locked Developing Countries",
"Least Developed Countries",
"Low Income Food Deficit Countries",
"Micronesia (region)",
"Middle Africa",
"Net Food Importing Developing Countries",
"Northern Africa",
"Northern Europe",
"Serbia and Montenegro",
"Small island developing States",
"South Eastern Asia",
"Southern Africa",
"Southern Asia",
"Southern Europe",
"Western Africa",
"World")) %>%
mutate(
entity = case_when(
entity == "Sudan (former)" ~ "Sudan",
entity == "Northern America" ~ "North America",
TRUE ~ entity)) %>%
select(-code, -year) %>%
group_by(entity) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(Total = rowSums(across(where(is.numeric)))) %>%
top_n(25, Total)
View(soybean_clean)
soybean_clean <- soybean_use %>%
filter(between(year, 2000, 2013)) %>%
filter(!entity %in% c("Africa",
"Asia",
"Europe",
"Oceania",
"Northern America",
"South America",
"Americas",
"Asia, Central",
"Australia & New Zealand",
"Central America",
"Eastern Africa",
"Eastern Europe",
"Europe, Western",
"European Union",
"Land Locked Developing Countries",
"Least Developed Countries",
"Low Income Food Deficit Countries",
"Micronesia (region)",
"Middle Africa",
"Net Food Importing Developing Countries",
"Northern Africa",
"Northern Europe",
"Serbia and Montenegro",
"Small island developing States",
"South Eastern Asia",
"Southern Africa",
"Southern Asia",
"Southern Europe",
"Western Africa",
"World")) %>%
mutate(
entity = case_when(
entity == "Sudan (former)" ~ "Sudan",
TRUE ~ entity)) %>%
select(-code, -year) %>%
group_by(entity) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(Total = rowSums(across(where(is.numeric)))) %>%
top_n(25, Total)
View(soybean_clean)
soybean_clean <- soybean_use %>%
filter(between(year, 2000, 2013)) %>%
filter(!entity %in% c("Africa",
"Asia",
"Europe",
"Oceania",
"Northern America",
"South America",
"Americas",
"Asia, Central",
"Australia & New Zealand",
"Central America",
"Eastern Asia",
"Eastern Africa",
"Eastern Europe",
"Europe, Western",
"European Union",
"Land Locked Developing Countries",
"Least Developed Countries",
"Low Income Food Deficit Countries",
"Micronesia (region)",
"Middle Africa",
"Net Food Importing Developing Countries",
"Northern Africa",
"Northern Europe",
"Serbia and Montenegro",
"Small island developing States",
"South Eastern Asia",
"Southern Africa",
"Southern Asia",
"Southern Europe",
"Western Africa",
"World")) %>%
mutate(
entity = case_when(
entity == "Sudan (former)" ~ "Sudan",
TRUE ~ entity)) %>%
select(-code, -year) %>%
group_by(entity) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(Total = rowSums(across(where(is.numeric)))) %>%
top_n(25, Total)
View(soybean_clean)
soybean_clean <- soybean_use %>%
filter(between(year, 2000, 2013)) %>%
filter(!entity %in% c("Africa",
"Asia",
"Europe",
"Oceania",
"Northern America",
"South America",
"Americas",
"Asia, Central",
"Australia & New Zealand",
"Central America",
"Eastern Asia",
"Eastern Africa",
"Eastern Europe",
"Europe, Western",
"European Union",
"Land Locked Developing Countries",
"Least Developed Countries",
"Low Income Food Deficit Countries",
"Micronesia (region)",
"Middle Africa",
"Net Food Importing Developing Countries",
"Northern Africa",
"Northern Europe",
"Serbia and Montenegro",
"Small island developing States",
"South Eastern Asia",
"Southern Africa",
"Southern Asia",
"Southern Europe",
"Western Africa",
"World")) %>%
mutate(
entity = case_when(
entity == "Sudan (former)" ~ "Sudan",
TRUE ~ entity)) %>%
select(-code, -year) %>%
group_by(entity) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(Total = rowSums(across(where(is.numeric)))) %>%
top_n(25, Total) %>%
pivot_longer(!entity, names_to = "category", values_to = "value") %>%
mutate(
category = case_when(
category == "human_food" ~ "Human Food",
category == "animal_feed" ~ "Animal Feed",
category == "processed" ~ "Processed",
TRUE ~ category))
View(soybean_clean)
soybean_clean <- soybean_use %>%
filter(between(year, 2000, 2013)) %>%
filter(!entity %in% c("Africa",
"Asia",
"Europe",
"Oceania",
"Northern America",
"South America",
"Americas",
"Asia, Central",
"Australia & New Zealand",
"Central America",
"Eastern Asia",
"Eastern Africa",
"Eastern Europe",
"Europe, Western",
"European Union",
"Land Locked Developing Countries",
"Least Developed Countries",
"Low Income Food Deficit Countries",
"Micronesia (region)",
"Middle Africa",
"Net Food Importing Developing Countries",
"Northern Africa",
"Northern Europe",
"Serbia and Montenegro",
"Small island developing States",
"South Eastern Asia",
"Southern Africa",
"Southern Asia",
"Southern Europe",
"Western Africa",
"World")) %>%
mutate(
entity = case_when(
entity == "Sudan (former)" ~ "Sudan",
TRUE ~ entity)) %>%
select(-code, -year) %>%
group_by(entity) %>%
summarise_if(is.numeric, sum, na.rm = TRUE) %>%
mutate(Total = rowSums(across(where(is.numeric)))) %>%
top_n(25, Total) %>%
select(-Total) %>%
pivot_longer(!entity, names_to = "category", values_to = "value") %>%
mutate(
category = case_when(
category == "human_food" ~ "Human Food",
category == "animal_feed" ~ "Animal Feed",
category == "processed" ~ "Processed",
TRUE ~ category))
View(soybean_clean)
ggplot(soybean_clean,aes(entity,value))
ggplot(soybean_clean,aes(entity,value)) +
geom_bar()
ggplot(soybean_clean,aes(entity,value)) +
geom_bar(fill = category)
ggplot(soybean_clean,aes(entity,value)) +
geom_bar()
ggplot(soybean_clean, aes(entity,value, fill = category)) +
geom_bar()
ggplot(soybean_clean, aes(entity,value, fill = category)) +
geom_col()
ggplot(soybean_clean, aes(entity,value)) +
geom_col()
ggplot(soybean_clean, aes(entity,value)) +
geom_col() +
facet_wrap(~category)
ggplot(soybean_clean, aes(value,entity)) +
geom_col() +
facet_wrap(~category)
ggplot(soybean_clean, aes(value,entity)) +
geom_col() +
coord_polar() +
facet_wrap(~category)
ggplot(soybean_clean, aes(value,entity)) +
geom_col() +
coord_polar(theta = "y") +
facet_wrap(~category)
ggplot(soybean_clean, aes(value,entity)) +
geom_col() +
coord_polar(theta = "x") +
facet_wrap(~category)
ggplot(soybean_clean, aes(value,entity)) +
geom_col() +
coord_polar(theta = "y") +
facet_wrap(~category)
ggplot(soybean_clean, aes(value,entity)) +
geom_col() +
facet_wrap(~category)
install.packages("ggvoronoi")
setwd("C:/Users/cshog/Dropbox/CHRISTIAN/Academic Work/Github/30DayChartChallenge")
library(here)
img <- load.image("abstract_image.jpeg")
library(imager)
library(tidyverse)
library(ggvoronoi)
library(here)
library(tidyverse)
install.packages("vctrs")
library(tidyverse)
library(ggvoronoi)
img <- load.image("abstract_image.jpeg")
img <- load.image("abstract_image.jpg")
print(img)
img
plot(img)
kable("html") %>%
kable_styling(full_width = F)
install.packages("kableExtra")
library(kableExtra)
img_df %>%
arrange(x, y, cc) %>%
filter(row_number() < 10)
img_df <- as.data.frame(img)
img_df %>%
arrange(x, y, cc) %>%
filter(row_number() < 10) %>%
kable("html") %>%
kable_styling(full_width = F)
img_df %>%
arrange(x, y, cc) %>%
filter(row_number() < 10) %>%
kable("html") %>%
kable_styling(full_width = F) %>%
mutate(channel = case_when(
cc == 1 ~ "Red",
cc == 2 ~ "Green",
cc == 3 ~ "Blue"
))
img_df <- img_df %>%
mutate(channel = case_when(
cc == 1 ~ "Red",
cc == 2 ~ "Green",
cc == 3 ~ "Blue"
))
View(img_df)
img_wide <- img_df %>%
select(x, y, channel, value) %>%
spread(key = channel, value = value) %>%
mutate(
color = rgb(Red, Green, Blue)
)
sample_size <- 2000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color)) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 5000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color)) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 9000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color)) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 15000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color)) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 18000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color)) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
img_sample$size <- runif(sample_size)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 15000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
img_sample$size <- runif(sample_size)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 10000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
img_sample$size <- runif(sample_size)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 5000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
img_sample$size <- runif(sample_size)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 7500
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
img_sample$size <- runif(sample_size)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
sample_size <- 10000
img_sample <- img_wide[sample(nrow(img_wide), sample_size), ]
img_sample$size <- runif(sample_size)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void()
library(extrafont)
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(caption = "@CSHoggard | #30DayChartChallenge")
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.margin = margin(20,20,20,20),
plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(title = "Gladstone Pottery Museum (Stoke-on-Trent, United Kingdom)",
caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.margin = margin(20,20,20,20),
plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(title = "Gladstone Pottery Museum (Stoke-on-Trent, United Kingdom)",
caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.title = element_text(size= 16),
plot.margin = margin(20,20,20,20),
plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(title = "Gladstone Pottery Museum (Stoke-on-Trent, United Kingdom)",
caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.title = element_text(size= 16, hjust = 0.5),
plot.margin = margin(20,20,20,20),
plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(title = "Gladstone Pottery Museum (Stoke-on-Trent, United Kingdom)",
caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.title = element_text(size= 16, hjust = 0.5, margin = margin(0,0,20,0)),
plot.margin = margin(20,20,20,20),
plot.background = element_rect(fill = NA, colour = 'black', size = 3))
ggplot(img_sample) +
geom_point(mapping = aes(x = x, y = y, color = color, size = size)) +
guides(size = FALSE) +
labs(title = "Gladstone Pottery Museum (Stoke-on-Trent, United Kingdom)",
caption = "@CSHoggard | #30DayChartChallenge") +
scale_color_identity() +
scale_y_reverse() +
theme_void() +
theme(plot.title = element_text(size= 16, hjust = 0.5, margin = margin(10,0,20,0)),
plot.margin = margin(20,20,20,20),
plot.background = element_rect(fill = NA, colour = 'black', size = 3))
font_import()
font_import(paths = "C:/Users/cshog/AppData/Local/Microsoft/Windows/Fonts")
